@echo off
echo ============================================
echo  CONFIGURACI√ìN DE PROXY AGENTS PARA NODE.JS
echo  WEATHERAPP BACKEND CON PROXY COMPLETO
echo ============================================
echo.

REM ===== VARIABLES DE PROXY PARA PROXY AGENTS =====
REM ‚ö†Ô∏è IMPORTANTE: Reemplaza estos valores con tu configuraci√≥n real de proxy:
REM 
REM Formato b√°sico:       http://servidor:puerto
REM Formato con auth:     http://usuario:password@servidor:puerto
REM Formato HTTPS proxy:  https://servidor:puerto

set HTTP_PROXY=http://proxy.tuempresa.com:8080
set HTTPS_PROXY=http://proxy.tuempresa.com:8080
set NO_PROXY=localhost,127.0.0.1,*.local,10.*,192.168.*
set SERVICE_IP=192.168.1.100

echo ‚úÖ Variables de proxy configuradas para proxy agents:
echo    HTTP_PROXY=%HTTP_PROXY%
echo    HTTPS_PROXY=%HTTPS_PROXY%
echo    NO_PROXY=%NO_PROXY%
echo    SERVICE_IP=%SERVICE_IP%
echo.
echo üì¶ PROXY AGENTS INSTALADOS:
echo    ‚Ä¢ http-proxy-agent: Para peticiones HTTP a trav√©s de proxy
echo    ‚Ä¢ https-proxy-agent: Para peticiones HTTPS a trav√©s de proxy
echo    ‚Ä¢ L√≥gica inteligente de NO_PROXY incluida
echo    ‚Ä¢ Soporte para IP de servicio espec√≠fica
echo.

REM ===== VERIFICAR PM2 =====
echo üîç Verificando estado de PM2...
pm2 status
echo.

REM ===== REINICIAR SERVICIO CON PROXY AGENTS =====
echo üîÑ Reiniciando WeatherApp backend con proxy agents...
echo.

REM Parar servicio actual
echo ‚èπÔ∏è  Parando servicio actual...
pm2 stop weather-backend

REM Iniciar con nueva configuraci√≥n de proxy agents
echo üöÄ Iniciando servicio con proxy agents configurados...
pm2 start ecosystem.config.cjs --env production

REM Verificar estado
echo.
echo üìä Estado final del servicio:
pm2 status
echo.

REM Mostrar logs recientes
echo üìù √öltimos logs del servicio:
pm2 logs weather-backend --lines 15

echo.
echo ‚úÖ CONFIGURACI√ìN DE PROXY AGENTS COMPLETADA
echo.
echo üìã RESUMEN:
echo    ‚Ä¢ HTTP Proxy Agent:  %HTTP_PROXY%
echo    ‚Ä¢ HTTPS Proxy Agent: %HTTPS_PROXY%
echo    ‚Ä¢ Exclusiones:       %NO_PROXY%
echo    ‚Ä¢ IP de Servicio:    %SERVICE_IP%
echo    ‚Ä¢ Servicio:          weather-backend
echo    ‚Ä¢ Estado:            Ejecut√°ndose con proxy agents
echo.
echo üîß C√ìMO FUNCIONA:
echo    ‚Ä¢ HttpProxyAgent maneja peticiones HTTP a trav√©s del proxy
echo    ‚Ä¢ HttpsProxyAgent maneja peticiones HTTPS a trav√©s del proxy
echo    ‚Ä¢ NO_PROXY excluye hosts de ir por proxy (localhost, IPs internas)
echo    ‚Ä¢ SERVICE_IP especifica la interfaz local de salida
echo    ‚Ä¢ Resoluci√≥n DNS se hace en el proxy, no localmente
echo.
echo üõ†Ô∏è  PARA CAMBIAR LA CONFIGURACI√ìN:
echo    1. Editar ecosystem.config.cjs
echo    2. Modificar HTTP_PROXY, HTTPS_PROXY, NO_PROXY, SERVICE_IP
echo    3. Ejecutar: pm2 restart weather-backend
echo.
echo üß™ PARA PROBAR LA CONECTIVIDAD CON PROXY AGENTS:
echo    ‚Ä¢ Health check:     curl http://localhost:3001/api/health
echo    ‚Ä¢ Test API:         curl http://localhost:3001/api/test-direct/39001
echo    ‚Ä¢ Connectivity:     curl http://localhost:3001/api/connectivity-test
echo    ‚Ä¢ Debug info:       curl http://localhost:3001/api/debug
echo.
echo üîç VERIFICAR EN LOGS:
echo    ‚Ä¢ Buscar "HttpProxyAgent" o "HttpsProxyAgent" en los logs
echo    ‚Ä¢ Verificar que no aparezcan errores "ENOTFOUND"
echo    ‚Ä¢ Los logs mostrar√°n qu√© agente se usa para cada petici√≥n
echo.

pause